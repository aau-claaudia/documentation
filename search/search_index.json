{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#user-documentation-strato-compute-cloud","title":"User documentation - Strato Compute Cloud","text":"<p>Hello and welcome to the documentation for Strato, a cloud computing service offered by CLAAUDIA.</p>"},{"location":"#important-rules-that-you-should-be-aware-of","title":"Important rules that you should be aware of:","text":"<ul> <li>You may not use Strato for data categories 2 and 3. See the AAU data classification guide</li> <li>There will NOT be made backup of the data you upload to the cloud, so do not delete your own copy. The data is safe in the cloud, as the storage system replicates it. There is just no additional backup, so if you by accident delete it from the cloud, it will be gone, and needs to be re-uploaded.</li> <li>You will have full ownership of the instance you create, allowing you to install additional software, customize it, or use it as is.</li> <li>You are responsible for maintaining and updating all systems and tools to ensure their security and protection against malware.</li> </ul>"},{"location":"#what-is-strato","title":"What is Strato","text":"<p>Strato is a compute cloud hosted at AAU. Strato is based on OpenStack, which allows a user to create and manage a virtual machine. The user can launch multiple instances based on different flavors and images. The flavour is the computing resource and the image is the initial operating system plus software.</p>"},{"location":"#what-is-it-good-for","title":"What is it good for?","text":"<ul> <li>Research. Especially data driven research with large computational needs.</li> <li>Minor services that need to run for long periods of time.</li> <li>To relocate your data processing activities to a cloud based, but personal server.</li> <li>A safe place to try cloud computing and running your own server.</li> <li>Scale the computing up and down depending on your needs.</li> <li>Running GPU heavy services for short periods of time.</li> </ul>"},{"location":"#what-is-it-not-good-for","title":"What is it not good for?","text":"<ul> <li>Production systems that require 24/7 uptime.</li> <li>Anything with sensitive data storage or processing requirements.</li> <li>Email servers or large scale communications.</li> <li>Anying shady, nefarious, questionable, below board or illegal </li> </ul>"},{"location":"#get-started-with-strato","title":"Get started with Strato","text":"<ol> <li>Getting started</li> <li>Introduction to Strato</li> </ol> <ol> <li>Application guides</li> </ol>"},{"location":"guides/advanced_guides/","title":"Advanced guides","text":"<p>Learn about more advanced OpenStack features E.g. deleting instances, releasing IPs or using the OpenStack CLI.</p>"},{"location":"guides/advanced_guides/Access_to_instance/","title":"Access to instance","text":"<p>Each instance has an internal fixed cloud IP address, but can also have a floating public IP address. An internal cloud IP addresses is used for communication between instances, and a floating public IP address is used for communication with networks outside the cloud, including the Internet.</p>"},{"location":"guides/advanced_guides/Access_to_instance/#ssh-rule","title":"SSH rule","text":"<p>Most images is reached by SSH, which require port 22 open.</p> <ol> <li>Navigate to network</li> <li>Click the sub menu Security Groups</li> <li>Click Manage Rules on the default Security group</li> <li>Add a rule</li> <li>Choose SSH from dropdown menu.</li> </ol> <p></p>"},{"location":"guides/advanced_guides/Access_to_instance/#custom-rule","title":"Custom rule","text":"<p>Some services require different ports open. To achieve this, the user must create a custom security rule and add it the instance</p> <ol> <li>Navigate to network</li> <li>click the sub menu Security Groups</li> <li>Create new Security group</li> <li>Enter name &amp; description</li> <li>Add a rule with a custom port </li> </ol>"},{"location":"guides/advanced_guides/Access_to_instance/#key-pair","title":"Key-pair","text":"<p>Openstack authenticates per default Linux instances with a ssh key-pair. If you have to access the machine with SSH, the key-pair must be set.  </p> <ol> <li>Navigate to Compute</li> <li>Click on the sub menu Key Pairs</li> <li>Add new Key Pair</li> <li>Fill out name</li> <li>Save the public key locally </li> </ol>"},{"location":"guides/advanced_guides/Access_to_instance/#ssh-access-to-instance","title":"SSH access to instance","text":"<p>You will have root-admin access to every instance you create and can therefore install additional software, tweak the instance or simply use it as is. Default username is ubuntu for all instances. There is no default password. Use SSH keys for safety, otherwise you muse create a user, and set a secure password your self.</p> <p><code>bash ssh ubuntu@130.226.98.xx -i yourPersonalKey.pem</code></p> <p></p>"},{"location":"guides/advanced_guides/attach_volume/","title":"Attaching volumes for additional storage","text":"<p>If you need additional storage, you can attach a volume to a running instance, make a filesystem and then mount the new filesystem on the attached volume.</p> <p>Be aware that each user has 10 TB of storage by default.</p> <p>Guide:</p> <ol> <li>Go to Volumes/Volumes and then click \"+ Create Volume\". Give it a name to make it easier to locate and a size. Make sure to leave \"Volume Source\" and \"Type\" at their default values.</li> <li>Find the instance you wish to attach the newly created volume to under Compute/Instances and under \"Actions\" for the relevant instance (must be a running instance) select \"Attach Volume\". Select the volume you have just created.</li> <li>You should see a popup message with the name of new device, e.g. \"/dev/vdb\", \"/dev/vdc\" etc. You can also click on the instance name to to get info on e.g. the attached volumes and their naming.</li> <li>SSH to the instance and create a new filesystem for the newly attached device/volume with e.g. (this overwrites any existing data. Only do this the first time you attach this volume; not when re-attaching later after a reboot or similar.)    <pre><code>$ sudo mkfs.ext4  /dev/vdb\n</code></pre></li> <li>Make a mount point in e.g. your home dir:    <pre><code>mkdir ~/vol1\n</code></pre></li> <li>Mount    <pre><code>$ sudo mount /dev/vdb ~/vol1\n</code></pre></li> <li>Change owner and group of directory to default user:    <pre><code>$ sudo chown -R $USER:$USER ./test\n</code></pre></li> <li>Verify that the volume has been mounted as expected:    <pre><code>$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nudev            7.9G     0  7.9G   0% /dev\n................................................\n/dev/vdb        976M  2.6M  907M   1% /home/ubuntu/vol1\n</code></pre></li> </ol>"},{"location":"guides/advanced_guides/attach_volume/#mounting-the-volume-permanently","title":"Mounting the volume permanently","text":"<p>You may want to configure your above mount permanently, so it automatically gets mounted if you reboot your instance, for example. In order to do this, follow steps 1-5 above. Then proceed as follows:</p> <ol> <li>Edit the file system mounting table    <pre><code>$ sudo nano /etc/fstab\n</code></pre> Do not alter or remove any of the existing contents in this file. This can render your instance unusable.</li> <li>Add the following on a new line at the bottom of this file:    <pre><code>/dev/vdb    /home/ubuntu/vol1    ext4    defaults    0 0\n</code></pre></li> <li>The long whitespaces above must be tab characters</li> <li>This assumes that your volume is attached as \"/dev/vdb\". If it is attached as another device (see step 3 above), type this device name instead.</li> <li> <p>This assumes that you have created your mount point at \"~/vol1\". If you have created it somewhere else (see step 5 above), type the full path to it instead of \"/home/ubuntu/vol1\".</p> </li> <li> <p>Press CTRL-X in the nano text editor, type \"y\" for yes and hit ENTER to exit the editor and save the file.</p> </li> <li>Now mount your newly configured volume with the following command (causes mount to mount all file systems mentioned in \"etc/fstab\"):    <pre><code>$ sudo mount -a\n</code></pre></li> <li>Verify that the volume has been mounted as expected:     <pre><code>$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\nudev            7.9G     0  7.9G   0% /dev\n................................................\n/dev/vdb        976M  2.6M  907M   1% /home/ubuntu/vol1\n</code></pre></li> </ol>"},{"location":"guides/advanced_guides/openstack_CLI/","title":"Command line interface (CLI) access","text":"<p>For advanced users it is possible to manage the cloud instances from the command line interface.</p> <p>THE GUIDE IS TESTED ON UBUNTU 18.04 For CLI access, the OpenStackClient (OSC) must be installed. USE PIP The package in apt does not work for SAML2 Authentication.</p>"},{"location":"guides/advanced_guides/openstack_CLI/#linux","title":"Linux","text":"<pre><code>$ sudo apt install python3-openstackclient\n# or\n$ pip install python-openstackclient\n# If pip is not installed run\n$ sudo apt install python-pip\n</code></pre>"},{"location":"guides/advanced_guides/openstack_CLI/#mac","title":"Mac","text":"<pre><code>curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython get-pip.py\npip install python-openstackclient\n</code></pre>"},{"location":"guides/advanced_guides/openstack_CLI/#get-token","title":"Get token","text":"<p>From a internet browser, login to this openstack wayf auth and inspect the Response Headers and find the X-Subject-Token. How to find the Response Headers varies from browser to browser. To find the Response Headers checkout this guide https://www.dev2qa.com/how-to-view-http-headers-cookies-in-google-chrome-firefox-internet-explorer/ which covers the most common browsers.</p> <p></p> <p>After you have found the X-Subject-Token, login to strato-new as normal. In the upper right corner, find and click your AAU ID (XXZZXX@aau.dk), and then \"OpenStack RC File\". Open or save the file. Start a terminal, and export the following variables (you need to locate a few values from the \"OpenStack RC File\"):</p> <pre><code>export OS_AUTH_TYPE=token\nexport OS_IDENTITY_API_VERSION=3\nexport OS_AUTH_URL=https://strato-new.claaudia.aau.dk:5000\nexport OS_PROJECT_ID=&lt;project ID as given in the OpenStack RC File&gt;\nexport OS_PROJECT_NAME=&lt;your name as given in the Openstack RC File&gt;\nexport OS_TOKEN=&lt;value of **X-Subject-Token**&gt;\n</code></pre> <p>If successful, you can now test your setup like</p> <pre><code>openstack server list\n$ openstack server list\n+--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+\n| ID                                   | Name   | Status | Networks                     | Image                    | Flavor    |\n+--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+\n| cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e | matlab | ACTIVE | Campus Network 01=10.92.0.55 | N/A (booted from volume) | gp.medium |\n+--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+\n</code></pre> <p>To get more information about your instance you can do e.g.</p> <pre><code>$ openstack server show cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e\n+-----------------------------+------------------------------------------------------------------+\n| Field                       | Value                                                            |\n+-----------------------------+------------------------------------------------------------------+\n| OS-DCF:diskConfig           | MANUAL                                                           |\n| OS-EXT-AZ:availability_zone | AAU                                                              |\n| OS-EXT-STS:power_state      | Running                                                          |\n| OS-EXT-STS:task_state       | None                                                             |\n| OS-EXT-STS:vm_state         | active                                                           |\n| OS-SRV-USG:launched_at      | 2022-01-17T10:17:53.000000                                       |\n| OS-SRV-USG:terminated_at    | None                                                             |\n| accessIPv4                  |                                                                  |\n| accessIPv6                  |                                                                  |\n| addresses                   | Campus Network 01=10.92.0.55                                     |\n| config_drive                |                                                                  |\n| created                     | 2022-01-13T12:53:35Z                                             |\n| flavor                      | gp.medium (0313b9b4-fbc3-44d9-81d1-9e5e925d1a97)                 |\n| hostId                      | e62666d97723e316fb8cc43a508156253a5e8684ae5c97525f36a94c         |\n| id                          | cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e                             |\n| image                       | N/A (booted from volume)                                         |\n| key_name                    | stratonew                                                        |\n| name                        | matlab                                                           |\n| progress                    | 0                                                                |\n| project_id                  | 19d0e041fb364580abc26539180dd0e1                                 |\n| properties                  |                                                                  |\n| security_groups             | name='default'                                                   |\n| status                      | ACTIVE                                                           |\n| updated                     | 2022-01-17T10:19:56Z                                             |\n| user_id                     | a42a435578323b3d7edd853e98fc643cbb4dd82ef8d5160c30be720f218b121f |\n| volumes_attached            | id='88a77439-439a-4647-a069-f5ec7035239d'                        |\n+-----------------------------+------------------------------------------------------------------+\n</code></pre> <p>Information that can be obtained from the Horizon web interface can also be accessed via the CLI, like quota:</p> <pre><code>$ openstack quota show --max-width 79\n+-----------------------+-----------------------------------------------------+\n| Field                 | Value                                               |\n+-----------------------+-----------------------------------------------------+\n| backup-gigabytes      | 1000                                                |\n| backups               | 10                                                  |\n| cores                 | 64                                                  |\n| fixed-ips             | -1                                                  |\n| floating-ips          | 50                                                  |\n| gigabytes             | 10000                                               |\n| gigabytes_RBD         | -1                                                  |\n| gigabytes___DEFAULT__ | -1                                                  |\n| groups                | 10                                                  |\n| injected-file-size    | 10240                                               |\n| injected-files        | 5                                                   |\n| injected-path-size    | 255                                                 |\n| instances             | 5                                                   |\n| key-pairs             | 100                                                 |\n| location              | Munch({'cloud': '', 'region_name': '', 'zone':      |\n|                       | None, 'project': Munch({'id':                       |\n|                       | '19d0e041fb364580abc26539180dd0e1', 'name':         |\n|                       | 'XU43DZ@aau.dk', 'domain_id': None, 'domain_name':  |\n|                       | None})})                                            |\n| networks              | 100                                                 |\n| per-volume-gigabytes  | -1                                                  |\n| ports                 | 500                                                 |\n| project               | 19d0e041fb364580abc26539180dd0e1                    |\n| project_name          | XU43DZ@aau.dk                                       |\n| properties            | 128                                                 |\n| ram                   | 512000                                              |\n| rbac_policies         | 10                                                  |\n| routers               | 10                                                  |\n| secgroup-rules        | 100                                                 |\n| secgroups             | 10                                                  |\n| server-group-members  | 10                                                  |\n| server-groups         | 10                                                  |\n| snapshots             | 5                                                   |\n| snapshots_RBD         | -1                                                  |\n| snapshots___DEFAULT__ | -1                                                  |\n| subnet_pools          | -1                                                  |\n| subnets               | 100                                                 |\n| volumes               | 10                                                  |\n| volumes_RBD           | -1                                                  |\n| volumes___DEFAULT__   | -1                                                  |\n+-----------------------+-----------------------------------------------------+\n</code></pre> <p>Flavors:</p> <pre><code>$ openstack flavor list\n+--------------------------------------+--------------+--------+------+-----------+-------+-----------+\n| ID                                   | Name         |    RAM | Disk | Ephemeral | VCPUs | Is Public |\n+--------------------------------------+--------------+--------+------+-----------+-------+-----------+\n| 0238fdc1-2525-4669-be22-a545341c8301 | cpu.small    |  16384 |  100 |         0 |     8 | True      |\n| 0313b9b4-fbc3-44d9-81d1-9e5e925d1a97 | gp.medium    |  32768 |  100 |         0 |     8 | True      |\n| 076618de-18c3-4539-b77c-fa4e09fd0755 | cpu.xlarge   | 131072 |  100 |         0 |    64 | True      |\n| 386615e0-efa8-488f-a7ec-4e643eaa1df1 | cpu.large    |  65536 |  100 |         0 |    32 | True      |\n| 5ae3ddeb-6a25-409e-ac18-9a27dde53dcf | m1.xlarge    |  16384 |  160 |         0 |     8 | True      |\n| 755ffd3f-1329-48aa-a7cf-6974981a8dab | gp.small     |  16384 |  100 |         0 |     4 | True      |\n| 7cb367d4-9715-411c-867f-a1b90d0e98ae | gp.large     |  65536 |  100 |         0 |    16 | True      |\n| 928a50d7-d05b-4b7d-9396-71f7afb94e46 | gpu.t4-large |  41000 |  100 |         0 |    10 | True      |\n| a2246ad5-7f9b-414b-9f92-6bda0021508d | mem.xlarge   | 262144 |  100 |         0 |    32 | True      |\n| abb9477b-955c-45fa-bfaf-b53ebc8b2cb7 | mem.small    |  32768 |  100 |         0 |     4 | True      |\n| cc48e798-6bf2-4df9-8705-5f3a3b558f1d | mem.medium   |  65536 |  100 |         0 |     8 | True      |\n| dd498df0-a489-48da-a5fd-44959b1ae34c | mem.large    | 131072 |  100 |         0 |    16 | True      |\n| e986e579-45e1-4542-a99e-5fc1518adc8a | cpu.medium   |  32768 |  100 |         0 |     3 | True      |\n+--------------------------------------+--------------+--------+------+-----------+-------+-----------+\n</code></pre> <p>Images:</p> <pre><code>$ openstack image list\n+--------------------------------------+------------------------------+--------+\n| ID                                   | Name                         | Status |\n+--------------------------------------+------------------------------+--------+\n| 4321a635-97c6-4c82-a000-71b381f4e0ce | CentOS 8                     | active |\n| 6a77c780-37ea-4b73-afe8-c730e19524cb | FreeBSD 12.1                 | active |\n| a561c93f-adb4-46e8-8d31-bb34c3430e78 | Ubuntu 18.04 (Bionic Beaver) | active |\n| dd18a9d1-6d53-423f-9511-bf075c4c9ce7 | Ubuntu 20.04 (Focal Fossa)   | active |\n| 9cb0e0e5-715d-4cdb-bca2-d239a451e3b6 | cirros-0.5.1-x86_64          | active |\n+--------------------------------------+------------------------------+--------+\n</code></pre> <p>For more information on how to use the cli check out the OpenStack CLI documentation or the Python OpenStack Client</p>"},{"location":"guides/advanced_guides/putty/","title":"Putty","text":"<p>Denne er flyttet over i quick start mappen</p>"},{"location":"guides/advanced_guides/remote_desktop_xfce/","title":"Remote desktop using X2Go and Xfce","text":"<p>You might be interested in obtaining a GUI interface of you instances for directly visualizing results or using the GUI of your programs. In this guide we will show you how to do this using X2Go for remote desktop and the Xfce desktop environment. </p> <p>The main reason for using X2Go is that it allows for data traffic using SSH such we can use the existing infrastructure - the already open port on 22 for SSH and authentication using RSA keys.</p> <p>Login to the instance using SSH and add x2go to the list of repositories</p> <pre><code>$ sudo add-apt-repository -y ppa:x2go/stable\n</code></pre> <p>and install necessary software (you can select either display manager - lightdm or gdm3).</p> <pre><code>$ sudo apt-get --assume-yes install xfce4 software-properties-common x2goserver x2goserver-xsession\n</code></pre> <p>Install a X2Go client on your computer and open the client. Create a new session with</p> <ul> <li>Host:  <li>Login: ubuntu</li> <li>RSA key for SSH connection:  <li>Session Type: XFCE</li> <p>Example: </p> <p>You should then be able to login: </p>"},{"location":"guides/advanced_guides/resize/","title":"Resizing an instance","text":"<p>Maybe you have created an instance and after a bit of time realized that you need a larger instance, or that you can resize to a smaller. In this case it is possible to resize if there are sufficient resources in the cloud to do so.</p> <p>To resize, do the following:</p> <ol> <li>Go to your instance - Compute-&gt;Instances.</li> <li>Rightmost under columns \"Actions\" roll-down and select \"Resize Instance\".</li> <li>Select the new instance size. Notice that CPU and RAM goes together so an increased amount of RAM would also implies more CPU and vice versa.</li> <li>Click \"Resize\".</li> <li>If it is possible to resize (enough resources if you ask for a larger flavor), the system should prepare the resize.</li> <li>After a bit of time then you will need to finally hit \"Confirm\" again in the rightmost \"Action\" column for your instance.</li> </ol> <p>You have now resized your image.</p>"},{"location":"guides/advanced_guides/running_simulations/","title":"Running long simulations","text":"<p>You might want to start long simulations, but this requires a bit of extra work. If you start the simulation in the login session, you need to keep the SSH connection alive and not e.g. close down your computer, close terminal etc. to avoid killing/stopping the simulations process. To avoid this problem you have to start the simulations through a mechanism that allows you to \"detach\" from the running process.</p> <p>There are multiple options for running long simulations in a detached session, the most common being <code>screen</code> , <code>tmux</code> and <code>byobu</code>. Here well show how to get started using screen</p> <p>Start a new screen: <pre><code>$ screen\n</code></pre> and press [Enter] to acknowledge the terms. You should now see a fresh session. In this session you can start your simulations. When the simulations are running, hit [Ctrl+a d] to \"detach\". You should now be in your login session again. Now try</p> <pre><code>$ screen -ls\nThere is a screen on:\n    1463.pts-0.screen-test  (09/09/21 09:48:48) (Detached)\n1 Socket in /run/screen/S-ubuntu.\n</code></pre> <p>and you should see a single screen that is detached. You can start multiple screens using <code>screen</code> again. To re-attach to a detached session, you can do:</p> <pre><code>$ screen -r\n</code></pre> <p>to reattach if you only have one screen, or:</p> <pre><code>$ screen -r 146\n</code></pre> <p>or the few first characters of the screen name to re-attach a particular screen session. When attached, you can then inspect standard output for simulation progress.</p> <p>You can read more about screen on the internet, e.g. a guide or a cheatsheet</p> <p>As mentioned, you can also use more advanced session managers such as tmux and byobu. Please consult additional guides for this.</p>"},{"location":"guides/advanced_guides/save_image/","title":"Save as image","text":"<p>There are plenty reasons why you would save your instance as an image. It could be for a back-up to a known state, to distribute an environment etc.</p>"},{"location":"guides/advanced_guides/save_image/#step-1-detach-your-volume","title":"Step 1 Detach your volume","text":"<p>Before creating an image of your volume so that you can download it, you need to detach the volume from your instance.</p> <p>First, let\u2019s stop your instance where the volume is attached too. You can view the instance name of your instance using the following command:</p> <pre><code>openstack server list\n</code></pre> <p>If the instance is still running you can Shut down your instance using the following command:</p> <p><pre><code>openstack server stop &lt;instance_name&gt;\n</code></pre> Next, we need to detach the volume from the instance it is mounted on. First, let\u2019s check the volume ID</p> <p><pre><code>$ openstack volume list\n</code></pre> You can detach the volume using the following command:</p> <p><pre><code>$ nova volume-detach &lt;instance_name&gt; &lt;volume_id&gt;\n</code></pre> If the volume is detached, you can go to step 2 otherwise follow Step 1.1</p>"},{"location":"guides/advanced_guides/save_image/#step-11","title":"STEP 1.1","text":"<p>To create an image of an attached volume, we are first going to create a snapshot from our bootable volume. After that, we are going to create a new volume from that snapshot. This way we have a volume that is unattached so that we can create an image of that volume.</p> <p>First, let\u2019s create a snapshot of the (bootable)volume</p> <p><pre><code>openstack volume snapshot create --volume &lt;volume_name&gt; --force &lt;snapshot_name&gt;\n</code></pre> We can check the status here:</p> <p>openstack volume snapshot list Now let\u2019s create a new volume from our freshly made snapshot. Please note that the volume size should match the snapshot size.</p> <pre><code>$ openstack volume create --snapshot &lt;snapshot-name-or-id&gt; --size &lt;size&gt; &lt;new-volume-name&gt;\n</code></pre>"},{"location":"guides/advanced_guides/save_image/#step-2-create-an-image-of-your-volume","title":"STEP 2 Create an image of your volume","text":"<p>You can not download a volume in OpenStack, so we first have to create an image of your volume so that the image can be downloaded.</p> <p>Get your image ID using the following command:</p> <p><pre><code>openstack volume list\n</code></pre> Create an image of your volume and give it a proper name using the following command. Be awear that using --disk-format qcow2 will reduce the size of the image.</p> <p><pre><code>openstack image create --volume &lt;volume_name&gt; &lt;your_image_name&gt; --disk-format qcow2\n</code></pre> You can check the status of your image using the following command:</p> <pre><code>openstack image list\n</code></pre>"},{"location":"guides/advanced_guides/transfer_files/","title":"Transferring files","text":""},{"location":"guides/advanced_guides/transfer_files/#linux-macos","title":"Linux &amp; MacOS","text":"<p>For larger files it can be benefitial to use Rsync, which is preinstalled on MacOS and most Linux-systems.  Rsync has numerous additional features, like compressing the file during transfer and displaying a progress bar. Can it pick up interrupted transfers?</p> <p>The basic command structure is: `rsync"},{"location":"guides/advanced_guides/transfer_files/#for-windows-users","title":"For Windows Users","text":"<p>If you are a Windows user, we recommend you use WinSCP to transfer the files. Do note that WinSCP is also avaialable in the AAU Software Center.</p> <p>After downloading and installing the application: 1. Choose SCP as the \"File protocol\" 2. In the field \"Host name\" type in your IP-adress. 3. For the SSH-protocol the standard \"Port number\" is 22. 4. The field \"User name\" is a standard username that gets assigned to your instance. A list of standard usernames can be found here. 5. By standard the field \"Password\" can be left empty. [billede] 6. Click the \"Advanced Button\".  7. Navigate to * SSH -&gt; Authentication * and browse to the location of your SSH-key. Select the key and press \"Open\". </p> <p>If you have navigated to the correct location and still can not see your SSH-key, please select \"Show all files\" as shown in the image below. Note that WinSCP only supports SSH-keys in the PuTTY-format (.pkk). If you have not already converted your key to this format, WinSCP will offer to do this for you, when you select the key in .pem-format. 8. Press \"Ok\" in the \"Advanced\" window to apply these settings. 9. Press login. The first time you login you will be welcomed by a warning message, asking wether you do in fact want to connect to this adress. If you can confirm this is what you are trying to do, you can press Yes. 10. You should now have a two-pane window, split vertically. On the left side you will have your local computer, and on the right side you will have the remote computer. To transfer files between them you can simply drag and drop. </p>"},{"location":"guides/application_guides/about_applications/","title":"Strato Applications","text":"<p>All Strato instances are essentially Linux computers with headless interfaces. They are in many ways very similar to regular desktop computers as they have a file system, network and computing capability, and they can run virtually any application - provided it can run on Linux. This is the most efficient way of distributing computing ressources and should be sufficient in most cases.</p>"},{"location":"guides/application_guides/about_applications/#command-line-interfaces","title":"Command Line Interfaces","text":"<p>For many users, operating a computer from the command line will be a new experience. At first they may not know what to do with it. and they may be tempted to install applications, that more or less turn their instance into a remote desktop. Although this may be possible, it might not necessarily be a good idea. Installing desktop capabilities will require a large number additional libraries to be installed, whereby critical system libraries are replaced, leaving you with a very non-standard instance that may be prone to errors, is difficult to troubleshoot and potentially has security risks.</p> <p>Tip</p> <p>A great ressource for learning how to use the Linux command line is: linuxjourney.com</p>"},{"location":"guides/application_guides/about_applications/#graphical-user-interfaces","title":"Graphical User Interfaces","text":"<p>In some cases however, you might need a graphical user interface (also known as a GUI) to do the work you need. These could be situations where your software does not have a headless interface or where it simply does not make sense to have one.</p> <p>In the following we will suggest a few simple solutions for working with GUI applications on Strato.</p> <p>Tip</p> <p>If you find that the prospect of learning to navigate the command line will be too difficult, you may consider one of our other HPC options:</p> <ul> <li>A more suitable alternative could be DeiC Interactive HPC (also known as UCloud), which as the name indicates is built for GUI-reliant interactive HPC operations.</li> <li>Read about our other computing services at our website: researcher.aau.dk. </li> </ul>"},{"location":"guides/application_guides/about_applications/#port-forwarding","title":"Port forwarding","text":"<p>This is likely the prefereable choice for most users.</p> <p>Many applications have dedicated server versions that can be run on a remote server and accessed through a web browser on your local computer.</p> <p>Before you go ahead and run the application, you should consider two things:</p> <ol> <li> <p>Find out what port is being used to expose the application. This configuration will vary frome one application to another, but in many cases you will find that certain applications use a default port. You should be able to find this in the documentation for the application. In many cases you should also be able to specify a different port, should the default port conflict with one that's being used.</p> </li> <li> <p>Establish port forwarding between the Strato instance and your local computer. We do this by adding an additional parameter to our SSH command: <code>-L &lt;local_port&gt;:localhost:&lt;remote_port&gt;</code>. Assuming that the port in question is <code>8888</code> the full command would be: <pre><code>ssh -i ~/.ssh/&lt;my_private_key&gt; -L 8888:localhost:8888 ubuntu@10.92.x.xxx\n</code></pre></p> </li> </ol> <p>Now you should be able to run your application in a web browser!</p> <p>Example</p> <p>We use Jupyter Notebook as an example.</p> <p>Assuming that we logged in with the <code>-L</code> parameter added to our ssh command and installed Jupyter, we can launch it with <pre><code>jupyter notebook\n</code></pre></p> <p>Now find a web browser on your local computer. In Jupyter's case a URL will be outputted after executing the application. Normally it would be sufficient to go to: <pre><code>localhost:8888\n</code></pre></p> <p>You should now have a fully functional Jupyter Notebook environment from within your browser!</p> <p></p>"},{"location":"guides/application_guides/about_applications/#x11-forwarding","title":"X11 forwarding","text":"<p>This approach can be good for rendering less demanding applications, plots, images, etc. In most cases rendering complete desktop software will simply be to heavy, and you will experience a considerable amount of lag.</p> <p>X11 is an display server technology commonly used in Linux, and is not always supported out of the box on other operating systems. Setup will therefore depend on your operating system. In recent years there have been advances with regards to support for X11 Forwarding, and the required setup of your system has become relatively easy.</p> WindowsmacOSLinux desktops <ul> <li>Ensure that you are using an appropriate terminal emulator. We recomend using Powershell. Both Powershell and OpenSSH come preinstalled with all currently supported versions of Windows.</li> <li>Ensure that your version of OpenSSH is greater than <code>8.1p1</code>. Check the version with: <pre><code>PS C:\\ ssh -V\nOpenSSH_for_Windows_8.1p1, LibreSSL 3.0.2\n</code></pre> If your version that is lower than 8.1p1 your version is supported. If your version is lower, you should consider updating your system.</li> </ul> <ul> <li>Ensure that you have Xquartz installed on your system. If this is not the case it can be downloaded from the official XQuartz webpage.</li> </ul> <ul> <li>Check which display server you are running on your local computer. Open a terminal application and run the command: <pre><code>echo $XDG_SESSION_TYPE\n</code></pre><ul> <li>If this outputs <code>X11</code>, you need not do anything.</li> <li>If this outputs <code>wayland</code>, you might want to install Waypie or consider switching to X11 temporarily.</li> </ul> </li> </ul> <p>Now you should be ready to use the feature. We do this by verifying by adding <code>-X</code> to our initial ssh command:</p> <p><pre><code>ssh -i ~/.ssh/&lt;my_private_key&gt; -X ubuntu@10.92.x.xxx\n</code></pre> If you did not log in to the instance with the <code>-X</code> flag, simply log out and log back in.</p> <p>This will create a file in the home diretory of your Strato instance called <code>.Xauthority</code>. You can use <code>ls -al $HOME</code> to view the files in your user directory. If you find one, and the last modified date column corresponds to the time you logged in to the server, you can assume that everything went well.</p> <p>Example</p> <p>Now that you have logged in to your instance with <code>ssh -X</code> image windows will now get rendered on your computer.</p> <p>Assuming that I have the following R code <pre><code>x &lt;- rnorm(100)\ny &lt;- rnorm(100)\nplot(x, y)\n</code></pre></p> <p>As soon as the <code>plot(x, y)</code> is run, this window will open:</p> <p></p>"},{"location":"guides/application_guides/archive/qgis/","title":"QGIS","text":"<p>QGIS is a free and open source geographic information system (GIS) used for working geospatial data. In the following sections we will demonstrate how to setup QGIS on your Strato instance. As this is an application that relies heavily on having a graphical user interface (GUI), we will be using a technology called \"X11 Forwarding\" to receive the graphics signal from the Strato instance and display them on your local machine. Please read through the section on Graphical User Interfaces to ensure that your local computer is set up for this.</p> <p>In the following we will be demonstrating two ways of installing QGIS:</p> <ul> <li>Install using apt: This uses the builtin package manager and requires no additional software. This is the best option for most people.</li> <li>Install using conda: This allows for having more than one version of QGIS in an isolated environment. If you already know how to use conda, this approach might be preferable. </li> </ul>"},{"location":"guides/application_guides/archive/qgis/#install-using-apt","title":"Install using APT","text":"<p>One way to install QGIS is to use the package manager <code>apt</code> found on all Debian-based GNU/Linux distributions - including Ubuntu. This section assumes that your Strato instance is running Ubuntu 22.04. You can use the command <code>lsb_release -ds</code> to check your distribution. </p> <p>We will begin by downloading a GPG-keyring. This will allow apt to verify the integrity of the software we will be downloading.  <pre><code>sudo wget -O /etc/apt/keyrings/qgis-archive-keyring.gpg https://download.qgis.org/downloads/qgis-archive-keyring.gpg\n</code></pre></p> <p>We will then create a file that specifies our system requirements and which repository we want download from. </p> <p>We will use a built-in text editor called <code>nano</code> to edit the file. </p> <pre><code>sudo nano /etc/apt/sources.list.d/qgis.sources\n</code></pre> <p>Copy and paste the following text into the file: <pre><code>Types: deb deb-src\nURIs: https://qgis.org/ubuntu-ltr\nSuites: jammy\nArchitectures: amd64\nComponents: main\nSigned-By: /etc/apt/keyrings/qgis-archive-keyring.gpg\n</code></pre> Then save the file: Press <code>ctrl + x</code> to exit, <code>Y</code> to confirm you wish to save the changes, and finally hit <code>enter</code> to confirm the filename. </p> <p>After making all these changes, we will need to update apt: <pre><code>sudo apt update\n</code></pre></p> <p>We then have apt download and install QGIS: <pre><code>sudo apt install qgis\n</code></pre></p> <p>QGIS should now be installed on the instance. </p> <p>Launch the application by typing: <pre><code>qgis\n</code></pre></p>"},{"location":"guides/application_guides/archive/qgis/#install-using-conda","title":"Install using Conda","text":"<p>Some users may need to have specific versions of QGIS (or several different versions). Conda offers a very elegant solution for managing different software environements. Conda is available as a prebuilt image in the OpenStack dashboard (see the section Launch Instance to learn more). Otherwise you should follow the official instructions for installing Conda/Miniconda.</p> <p>Create a conda environment - here we will call it my_gis_project - feel free to choose another name: <pre><code>conda create --name my_gis_project\n</code></pre></p> <p>Activate the conda environment: <pre><code>conda activate my_gis_project\n</code></pre></p> <p>Install download QGIS (from the channel conda-forge) <pre><code>conda install -c conda-forge qgis\n</code></pre></p> <p>And launch the application: <pre><code>qgis\n</code></pre></p>"},{"location":"guides/application_guides/archive/ubuntu/ubuntu_18-04/","title":"Ubuntu 18.04 LTS","text":"<p>The default username is ubuntu for the Ubuntu 18.04 LTS image. Use a key-pair applied to the instance in the creation, (Unsure what this is, see Quick-start - Your first instance) to access the instance you can use the default IP Adress (You dont need a floating-IP adress)</p> <p><pre><code>ssh ubuntu@10.92.0.xx -i yourPersonalKey.pem\n</code></pre> </p>"},{"location":"guides/application_guides/archive/ubuntu/ubuntu_18-04/#installing-gpu-support","title":"Installing GPU support","text":"<p>You can pick the flavor \"gpu.t4-large\" to have access to a T4 GPU.</p> <p>To get up and running with the GPU you need to run</p> <pre><code>sudo apt update\nsudo apt full-upgrade -y\nsudo apt install nvidia-headless-460 nvidia-utils-460 -y\nsudo reboot\n</code></pre> <p>To get e.g. torch working with the anaconda distribution you can do:</p> <pre><code>anacondaType=Anaconda3-2021.05-Linux-x86_64.sh\nwget -q https://repo.anaconda.com/archive/$anacondaType\nchmod +x $anacondaType\n./$anacondaType -b -p\nsudo rm -f $anacondaType\nexport PATH=\"$HOME/anaconda3/bin:$PATH\"\nconda init bash\nconda install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c nvidia\n</code></pre> <p>and verify</p> <pre><code>/home/ubuntu/anaconda3/bin/ipython\nPython 3.8.8 (default, Apr 13 2021, 19:58:26) \nType 'copyright', 'credits' or 'license' for more information\nIPython 7.22.0 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import torch\n\nIn [2]: a = torch.zeros(10).cuda()\n\nIn [3]:\n</code></pre>"},{"location":"guides/application_guides/archive/ubuntu/ubuntu_20-04/","title":"Ubuntu 20.04 LTS","text":"<p>The default username is ubuntu for the 20.04 LTS image. Use a key-pair applied to the instance in the creation, (Unsure what this is, see Quick-start - Your first instance) to access the instance you can use the default IP Adress (You dont need a floating-IP adress)</p> <pre><code>ssh ubuntu@10.92.0.xx -i yourPersonalKey.pem\n</code></pre> <p></p>"},{"location":"guides/application_guides/archive/ubuntu/ubuntu_20-04/#installing-gpu-support","title":"Installing GPU support","text":"<p>You can pick the flavor \"gpu.t4-large\" to have access to a T4 GPU.</p> <p>To get up and running with the GPU you need to run</p> <pre><code>sudo apt update\nsudo apt full-upgrade -y\nsudo apt install nvidia-headless-460 nvidia-utils-460 -y\nsudo reboot\n</code></pre> <p>To get e.g. torch working with the anaconda distribution you can do:</p> <pre><code>anacondaType=Anaconda3-2021.05-Linux-x86_64.sh\nwget -q https://repo.anaconda.com/archive/$anacondaType\nchmod +x $anacondaType\n./$anacondaType -b -p\nsudo rm -f $anacondaType\nexport PATH=\"$HOME/anaconda3/bin:$PATH\"\nconda init bash\nconda install pytorch torchvision torchaudio cudatoolkit=11.1 -c pytorch -c nvidia\n</code></pre> <p>and verify</p> <pre><code>/home/ubuntu/anaconda3/bin/ipython\nPython 3.8.8 (default, Apr 13 2021, 19:58:26) \nType 'copyright', 'credits' or 'license' for more information\nIPython 7.22.0 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import torch\n\nIn [2]: a = torch.zeros(10).cuda()\n\nIn [3]:\n</code></pre>"},{"location":"guides/application_guides/docker/docker/","title":"Docker","text":"<p>The following will guide you trough installing Docker on your Strato instance.</p> <ol> <li>Fetch the appropriate GPG key, to verify the integrity of the software <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n</code></pre></li> <li>Add the Docker repository to the list of sources in the APT packaging index <pre><code>echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre></li> <li>Update the APT packaging index <pre><code>sudo apt update\n</code></pre></li> <li>Install Docker CE (Community Edition), Docker CE CLI (Command Line Interface) and containerd.io (a container runtime dependency). <pre><code>sudo apt install docker-ce docker-ce-cli containerd.io\n</code></pre></li> <li>Verify that Docker is running <pre><code>sudo systemctl --no-pager status docker\n</code></pre></li> <li>Add the current user to the appropriate Linux group \"Docker\". This is so you don't have to <code>sudo</code> all your docker commands. <pre><code>sudo usermod -aG docker ${USER} &amp;&amp; newgrp docker\n</code></pre></li> </ol>"},{"location":"guides/application_guides/jupyter/jupyter/","title":"Jupyter Notebook","text":"<p>In the following we will be guiding you throught the process of setting up Jupyter Notebooks on a Strato Instance.</p> <p>Tip</p> <p>Jupyter Notebookes are also available on DeiC Interactive HPC (also known as UCloud). This requires no setup and ships with a GUI out of the box. Read more about this possibility in the official platform documentation.</p>"},{"location":"guides/application_guides/jupyter/jupyter/#installing-jupyter","title":"Installing Jupyter","text":"<p>Jupyter can be installed either using Pip or Conda (also known as Anaconda). You will find instructions for both, but it is wise to only chose one of these methods.</p>"},{"location":"guides/application_guides/jupyter/jupyter/#using-conda","title":"Using Conda","text":"<p>We recommend following the official installation instructions for installing Miniconda (a lightweight Conda distribution).</p> <p>Note</p> <p>It's also possible to launch an instance that has Miniconda preinstalled. You can find this image in the list of source images (look for Miniconda Ubuntu 22.04) - refer back to the section Launch Instance to learn about this list. </p> <p>Install Jupyter with conda <pre><code>conda install -c conda-forge jupyter\n</code></pre></p>"},{"location":"guides/application_guides/jupyter/jupyter/#using-pip","title":"Using Pip","text":"<p>Update the apt package index: <pre><code>sudo apt update\n</code></pre></p> <p>Then install Pip: <pre><code>sudo apt install python3-pip python3-dev\n</code></pre></p> <p>Jupyter Notebook can now be installed with Pip: <pre><code>pip3 install jupyter\n</code></pre></p> <p>Finally set Jupyter to the path where pip installed it: <pre><code>export PATH=\"$PATH:$HOME/.local/bin/\"\n</code></pre></p>"},{"location":"guides/application_guides/jupyter/jupyter/#launch-jupyter-notebook","title":"Launch Jupyter Notebook","text":"<p>By adding a few details to our initial SSH-command, you can launch a Jupyter Notebook on your Strato instance and access it in a web browser running on your local computer. <pre><code>ssh -i ~/.ssh/my_ssh_key -L 8888:localhost:8888 &lt;user&gt;@&lt;instance_ip&gt;\n</code></pre></p> <p>This establishes port-forwarding from your instance to the localhost of your computer. If you did not do this when you logged in to your instance, simply log out and log back in with these details added.</p> <p>Launch the Jupyter Notebook from your instance with: <pre><code>jupyter notebook --port=8888\n</code></pre></p> <p>This will generate a substantial number of lines. Find the line that has a link that looks something like this: <pre><code>http://localhost:8888/tree?token=b9fc44a51db685da273a2cd2kl25ac299f346ce8445bfa262382c\n</code></pre></p> <p>Now copy this link and paste it in to your web browser of choice. </p> <p>This should land you inside the notebook and everything should feel familiar.</p>"},{"location":"guides/application_guides/matlab/matlab/","title":"Matlab","text":"<p>In the following we will be guiding you throught the process of installing Matlab on a Strato Instance.</p> <p>Tip</p> <p>Matlab is also available on DeiC Interactive HPC (also known as UCloud). This requires no setup and ships with a GUI out of the box. Read more about this possibility in the official platform documentation.</p>"},{"location":"guides/application_guides/matlab/matlab/#installing-matlab","title":"Installing Matlab","text":"<p>Begin by updating the APT packaging index, so we have an updated list of sources to download applications from: <pre><code>sudo apt update\n</code></pre></p> <p>Before going further, we will need to install an unzip tool and some additional libraries recommended by Mathworks. <pre><code>sudo apt install unzip libx11-dev xorg-dev xvfb\n</code></pre></p> <p>Download the Matlab Package Manager (MPM) from Mathworks and make it executable: <pre><code>sudo wget -P /usr/local/bin/ https://www.mathworks.com/mpm/glnxa64/mpm &amp;&amp; sudo chmod +x /usr/local/bin/mpm\n</code></pre></p> <p>Now install Matlab using MPM. Note that here we are installing a version from late 2023. You can check Mathworks website to see if there is a newer release. <pre><code>mpm install MATLAB --release=R2024a --destination=$HOME/matlab/\n</code></pre></p> <p>Additional matlab toolboxes can be installed in the following manner: <pre><code>mpm install --release=R2024a --destination=$HOME/matlab --products Signal_Processing_Toolbox Communications_Toolbox\n</code></pre> For a full list of available toolboxes check out mpm's documentation for input files. If you cannot find a toolbox you need, it might be unavailable for the Matlab release and/or platform, read about mpm's limitations.</p> <p>As we want to be able to launch matlab, when we type <code>matlab</code> - we will need to add the directory of the matlab executable to our <code>PATH</code> variable. We do this and restart our shell: <pre><code>echo \"export PATH=$HOME/matlab/bin:$PATH\" &gt;&gt; .bashrc &amp;&amp; exec $SHELL\n</code></pre></p>"},{"location":"guides/application_guides/matlab/matlab/#activating-matlab","title":"Activating Matlab","text":"<p>Matlab needs an active licence to run. Before starting the activation process, open your local browser and visit MathWorks to acquire a one-time password. <pre><code>bash $HOME/matlab/bin/activate_matlab.sh\n</code></pre> Choose \"Activate automatically using the Internet\" then \"Log in to my MathWorks Account\" with your AAU e-mail and the one-time password to proceed with activation. Select the appropriate license for you (student or employee), finally confirm the information and finish the activation process.</p>"},{"location":"guides/application_guides/matlab/matlab/#running-matlab","title":"Running Matlab","text":"<p>There are two ways in which you can work with Matlab on Strato instances.</p> <ol> <li> <p>Run the application in headless mode: By default Strato instances do not come with any graphical user interfaces, but are operated in headless mode. In cases where you simply need to execute a prewritten script, this approach might be preferable.</p> </li> <li> <p>Run with graphical user interface (GUI): Here the application runs on your Strato instance, but its graphics are rendered on your local computer - in this case your web browser. This is useful for interactive development, ie. workflows where you will need to test and modify your code continuously.</p> </li> </ol>"},{"location":"guides/application_guides/matlab/matlab/#headless-mode","title":"Headless mode","text":"<p>If you wanted to run prepared script called <code>your_script.m</code>, you would run: <pre><code>matlab -nodisplay -batch your_script.m\n</code></pre></p> <p>If you would want to enter the Matlab console to execute individual statements: <pre><code>matlab -nodisplay\n</code></pre></p>"},{"location":"guides/application_guides/matlab/matlab/#with-a-gui","title":"With a GUI","text":"<p>Here we will be running the application on the Strato instance and rendering the application on our local computer. In order for your local computer to receive the necessary datastream from the server, we will need to add a small detail to our SSH command. <pre><code>ssh -i ~/.ssh/my_ssh_key -L 8888:localhost:8888 &lt;user&gt;@&lt;instance_ip&gt;\n</code></pre></p> <p>This establishes port-forwarding from your instance to the localhost of your computer. If you did not do this when you logged in to your instance, simply log out and log back in with these details added.</p> <p>Now let's proceed with the install. Start by checking if PIP is found on the system:  <pre><code>which pip\n</code></pre></p> <p>If the command ouputs a path, PIP is installed. If command outputs <code>pip not found</code>, go ahead and install it by running: <pre><code>sudo apt install python3-pip python3-dev\n</code></pre></p> <p>Now install the Jupyter Kernel with: <pre><code>pip install jupyter jupyter-matlab-proxy\n</code></pre></p> <p>Jupyter has now been installed in <code>$HOME/.local/bin</code> - a subdirectory to your user directory. Adding this directory to the system variable <code>$PATH</code> will allow us to launch Jupyter from anywhere: <pre><code>export PATH=\"$PATH:$HOME/.local/bin/\"\n</code></pre></p> <p>Now launch Jupyter with: <pre><code>jupyter lab --port=8888\n</code></pre></p> <p>This will output a great many lines. Towards the end of the output, you will find a line that looks something like this: <pre><code>http://localhost:8888/tree?token=b9fc44a5ic1dbl685da73a2acad22uu5ac299f3d46icae8445bfa262382c\n</code></pre></p> <p>This URL has the port number we specified earlier and a special security token. Copy this link and paste it into your web browser.</p> <p>You can now choose to either run Matlab as an application inside your browser or as a Jupyter Notebook.</p> <p></p> <p>If you chose \"Open Matlab\" you will be met with a registration window. In order to do this, input your AAU email adress and follow the process of verifying with WAYF.</p> <p>After this step, you should be inside the application and everything should feel familiar.</p> <p></p>"},{"location":"guides/best_practice_guides/","title":"Best-practice guides","text":"<p>In this section, we outline best practices for effectively utilizing STATO. Adhering to these guidelines will optimize your workflow, ensure efficient resource usage, and maintain system stability for all users. </p>"},{"location":"guides/best_practice_guides/How_to_avoid_malware/","title":"How to minimize the risk of malware on your STATO server","text":"<p>By adhering to these best practices, you can significantly reduce the risk of malware infections and strengthen the overall security posture of your STATO environment</p>"},{"location":"guides/best_practice_guides/How_to_avoid_malware/#1-use-trusted-repositories","title":"1. Use trusted repositories","text":"<ul> <li> <p>Stick to official sources: Always install software from your Linux distribution\u2019s official repositories (e.g., APT for Ubuntu/Debian, YUM/DNF for CentOS/RHEL). These repositories are regularly vetted and maintained by trusted developers, ensuring a higher level of security.</p> </li> <li> <p>Verify external sources: If you need to use third-party repositories or download packages from external sources, ensure they are well-known, trusted, and verified. Always check for digital signatures and authenticity.</p> </li> </ul>"},{"location":"guides/best_practice_guides/How_to_avoid_malware/#2-opt-for-minimalist-installation","title":"2. Opt for minimalist installation","text":"<ul> <li>Install only essential packages: Limit the installation to only the software necessary for your server\u2019s intended purpose. A minimalist approach reduces the potential attack surface by limiting the number of installed packages that could be compromised.</li> </ul>"},{"location":"guides/best_practice_guides/How_to_avoid_malware/#3-keep-the-operating-system-and-packages-up-to-date","title":"3. Keep the operating system and packages up-to-date","text":"<ul> <li>Timely kernel and software updates: Regularly update the Linux kernel and all installed packages to ensure that security vulnerabilities are promptly patched. Consider automating this process where possible to minimize delays.</li> </ul>"},{"location":"guides/best_practice_guides/How_to_avoid_malware/#4-implement-strong-access-controls","title":"4. Implement strong access controls","text":"<ul> <li>Enforce Strong SSH Keys: Mandate the use of strong, unique SSH keys for server access. Avoid using weak or default passwords.</li> </ul>"},{"location":"guides/best_practice_guides/Pause_shutdown_delete_instances%202/","title":"Pause, shutdown and delete instances","text":"<p>Instances in the Strato CLAAUDIA Compute cloud can have a range of States:</p> <ul> <li>Active: Instance is active, you can connect to it.</li> <li>Shelved (CPU only): Shelving is useful if you have a CPU only instance (i.e. no GPU) that you are not using, but would like retain in your list of servers. For example, you can stop an instance at the end of a work week, and resume work again at the start of the next week. All associated data and resources are kept; however, anything still in memory is not retained. It is, however, better practice to delete the instance and then later start a new instance from the volume with compute resources needed at that time.</li> <li>Paused: In this state, the server state is preserved in RAM, but operations have been stopped and will resume when instructed. This state will keep allocated resources from being used by others.</li> <li>Suspended: Instance state has been stored on disk, including the contents of its RAM. This state will keep allocated resources from being used by others.</li> <li>Shutoff: This is like powering off a server. This state will keep allocated resources from being used by others.</li> <li>Resized: Allows you to select a new instance flavor, after which the instance will be taken down and then come back up with the new computational resources available to it. On Linux you can check with commands such as <code>lscpu</code> and <code>lsmem</code> or <code>cat /proc/cpuinfo</code> and <code>cat /proc/meminfo</code>. This state will keep allocated resources from being used by others.</li> </ul>"},{"location":"guides/best_practice_guides/Pause_shutdown_delete_instances%202/#delete-an-instance","title":"Delete an instance","text":"<p>To delete an instance using the Horizon web interface you must be logged in. For an instance to be deleted, it should first be shut down. Navigate to the launch instance menu using the horizon web interface.</p> <ol> <li>Navigate to the project tab</li> <li>Click the Compute sub-tab</li> <li>Click on Instances</li> <li>Mark the checkbox of the instance you wish to delete.</li> <li>Press Delete Instances on the right side of the webpage.</li> <li>Press Delete Instances in the confirmation dialog.</li> </ol> <p></p> <p>Deleting an instance will not delete the attached volume, unless specifically set to during creation.</p>"},{"location":"guides/best_practice_guides/Pause_shutdown_delete_instances%202/#shelve-an-instance-cpu-only","title":"Shelve an instance (CPU only)","text":"<p>It is possible to shelve an instance, but we do not recommend this practice. </p> <p>Any attempt to shelve or unshelve with a GPU flavour will end in an error state.</p> <p>If you know you are not going to use a CPU only instance for a while, for example the next couple of days or even longer, it is encouraged to release the resources to make them available to other users running instances on Strato.</p> <ol> <li>Navigate to the project tab.</li> <li>Click the Compute sub-tab.</li> <li>Click on Instances.</li> <li>In the row of the instance you wish to shelve, press the dropdown menu in the right-most column, Actions.</li> <li>Select Shelve Instance from the dropdown.</li> </ol> <p>This will first shut down the instance nicely, save it to disk and subsequently release its resources. In order to use your instance again at a later point, repeat the above steps and this time select Unshelve Instance from the dropdown menu. Although other states such as Paused, Suspended, and Shutoff also make the instance unavailable, shelving an instance is the only approach that actually releases the resources and makes them available to other users and instances.</p>"},{"location":"guides/best_practice_guides/Pause_shutdown_delete_instances/","title":"Pause, shutdown and delete instances","text":"<p>Instances in the Strato CLAAUDIA Compute cloud can have a range of States:</p> <ul> <li>Active: Instance is active, you can connect to it.</li> <li>Shelved (CPU only): Shelving is useful if you have a CPU only instance (i.e. no GPU) that you are not using, but would like retain in your list of servers. For example, you can stop an instance at the end of a work week, and resume work again at the start of the next week. All associated data and resources are kept; however, anything still in memory is not retained. It is, however, better practice to delete the instance and then later start a new instance from the volume with compute resources needed at that time.</li> <li>Paused: In this state, the server state is preserved in RAM, but operations have been stopped and will resume when instructed. This state will keep allocated resources from being used by others.</li> <li>Suspended: Instance state has been stored on disk, including the contents of its RAM. This state will keep allocated resources from being used by others.</li> <li>Shutoff: This is like powering off a server. This state will keep allocated resources from being used by others.</li> <li>Resized: Allows you to select a new instance flavor, after which the instance will be taken down and then come back up with the new computational resources available to it. On Linux you can check with commands such as <code>lscpu</code> and <code>lsmem</code> or <code>cat /proc/cpuinfo</code> and <code>cat /proc/meminfo</code>. This state will keep allocated resources from being used by others.</li> </ul>"},{"location":"guides/best_practice_guides/Pause_shutdown_delete_instances/#delete-an-instance","title":"Delete an instance","text":"<p>To delete an instance using the Horizon web interface you must be logged in. For an instance to be deleted, it should first be shut down. Navigate to the launch instance menu using the horizon web interface.</p> <ol> <li>Navigate to the project tab</li> <li>Click the Compute sub-tab</li> <li>Click on Instances</li> <li>Mark the checkbox of the instance you wish to delete.</li> <li>Press Delete Instances on the right side of the webpage.</li> <li>Press Delete Instances in the confirmation dialog.</li> </ol> <p></p> <p>Deleting an instance will not delete the attached volume, unless specifically set to during creation.</p>"},{"location":"guides/best_practice_guides/Pause_shutdown_delete_instances/#shelve-an-instance-cpu-only","title":"Shelve an instance (CPU only)","text":"<p>It is possible to shelve an instance, but we do not recommend this practice. </p> <p>Any attempt to shelve or unshelve with a GPU flavour will end in an error state.</p> <p>If you know you are not going to use a CPU only instance for a while, for example the next couple of days or even longer, it is encouraged to release the resources to make them available to other users running instances on Strato.</p> <ol> <li>Navigate to the project tab.</li> <li>Click the Compute sub-tab.</li> <li>Click on Instances.</li> <li>In the row of the instance you wish to shelve, press the dropdown menu in the right-most column, Actions.</li> <li>Select Shelve Instance from the dropdown.</li> </ol> <p>This will first shut down the instance nicely, save it to disk and subsequently release its resources. In order to use your instance again at a later point, repeat the above steps and this time select Unshelve Instance from the dropdown menu. Although other states such as Paused, Suspended, and Shutoff also make the instance unavailable, shelving an instance is the only approach that actually releases the resources and makes them available to other users and instances.</p>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/","title":"Delete and restart an instance from the volume","text":"<p>This is essentially a 3 step process.</p> <ol> <li>Rename the volume attached to your instance / server.</li> <li>Delete your instance</li> <li>Start a new instance and choose a volume rather than an image as the \"Source\".</li> </ol>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#method-1-how-to-shut-off-delete-and-reinstate-an-instance-from-a-volume","title":"Method 1: How to Shut off, delete and reinstate an instance from a volume","text":""},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#preparation-and-deletion-of-an-instance","title":"Preparation and deletion of an instance","text":"<ol> <li>Browse to the <code>&gt;Compute &gt;&gt;Instances</code> section, and on the relevant instance click the instance name.<ol> <li>Make a note of the volume number.</li> <li>Copy and paste the volume number somewhere you can find it for future reference.</li> </ol> </li> <li>Browse to the <code>&gt;Volumes &gt;&gt;Volumes</code> section and rename the volume noted in 1.2 to a name you can identify later. (For example, RStudio server volume)</li> <li>Browse to the <code>&gt;Compute &gt;&gt;Instances</code> section, and on the relevant instance click the dropdown-menu,<ol> <li>Select <code>Shut Off Instance</code>, to make sure that all operations are properly shut down before deleting.</li> </ol> </li> <li>Browse to the <code>&gt;Compute &gt;&gt;Instances</code> section, and on the relevant instance click the dropdown-menu,<ol> <li>Select Delete Instance. This will delete the instance.</li> </ol> </li> <li>Browse to <code>&gt;Volumes &gt;&gt;Volumes</code> and check that the volume is still there.</li> </ol>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#re-launching-the-instance","title":"Re-launching the instance:","text":"<ol> <li>Browse to the <code>&gt;Volumes &gt;&gt;Volumes</code> section.<ol> <li>Find the volume noted in point 3, and then click the dropdown menu button at Edit Volume:</li> </ol> </li> <li>Select Launch as Instance.</li> <li>Choose the most relevant / appropriate flavour. You here have the option of changing flavours.</li> <li>NB when you select the <code>&gt;Source &gt;&gt;Boot source</code>, you must select Volume. <ol> <li>You will need to click the up arrow alongside the volume noted in point 3 to use it as the boot source.</li> <li>Follow all other instance setup instructions as noted in the Quick guide for the network settings, keypairs etc., and launch the instance.</li> </ol> </li> <li>Check that the instance has launched and note the new IP address.</li> <li>Access your volume via the terminal (ssh ubuntu@\u2026. ), here you will need to use the new IP address.</li> <li>Your machine should run as before, but with the flavour most recently selected.</li> </ol> <p>NOTE: Windows users may need to update PuTTy settings.</p>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#method-2-how-to-shut-off-delete-and-reinstate-an-instance-where-delete-volume-on-instance-delete-is-activated-set-to-yes","title":"Method 2: How to Shut off, delete and reinstate an instance where \u201cDelete volume on Instance delete\u201d is activated (set to yes).","text":"<p>Warning: This method is experimental and includes a possible failsafe to prevent automatic deletion of volume, so proceed with caution: We have tested this to work, but we cannot guarantee that it will prevent the deletion of the volume. At present, creating a snapshot of a volume prevents the automatic deletion of the volume when the instance is deleted. A snapshot is NOT a copy or image of a disk, and thus depends on the disk still existing. If you are in doubt about whether you have activated this setting, you should be able to use the following process to delete your instances safely:</p>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#preparation-and-deletion-of-an-instance_1","title":"Preparation and deletion of an instance","text":"<ol> <li>Browse to the <code>&gt;Compute &gt;&gt;Instances</code> section, and on the relevant instance click the instance name.</li> <li>Make a note of the volume number.</li> <li>Copy and paste the volume number somewhere you can find it for future reference.</li> <li>Browse to the <code>&gt;Volumes &gt;&gt;Volumes</code> section and rename the instance noted in 1.2 to a name you can identify later. (For example RStudio server volume)</li> <li>Browse to the <code>&gt;Compute &gt;&gt;Instances</code> section, and on the relevant instance click the dropdown-menu,</li> <li>Select Shut Off Instance, to make sure that all operations are properly shut down before deleting.</li> <li>Browse to <code>&gt;Volumes &gt;&gt;Volumes</code>, and for the relevant volume:</li> <li>Click the dropdown-box and select Create snapshot.</li> <li>Choose an appropriate name. (For example Temporary snapshot of RStudio server volume), and create the snapshot</li> <li>Check that the snapshot is listed in the <code>&gt;Volumes &gt;&gt;Snapshots</code> section.</li> <li>Browse to the <code>&gt;Compute &gt;&gt;Instances</code> section, and on the relevant instance click the dropdown-menu,</li> <li>Select Delete Instance. This will delete the instance, you can now go ahead and delete the snapshot.</li> <li>Browse to <code>&gt;Volumes &gt;&gt;Volumes</code> and check that the volume is still there.</li> <li>Browse to <code>&gt;Volumes &gt;&gt;Snapshots</code> and click the dropdown box alongside the relevant snapshot, then click the Delete snapshot option to delete the snapshot.</li> </ol>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#re-launching-the-instance_1","title":"Re-launching the instance:","text":"<ol> <li>Browse to the <code>&gt;Volumes &gt;&gt;Volumes</code> section.</li> <li>Find the volume noted in point 3, and then click the dropdown menu button at Edit Volume:</li> <li>Select Launch as Instance.</li> <li>Choose the most relevant / appropriate flavour. You have the option of changing flavours.</li> <li>NB when you select the <code>&gt;Source &gt;&gt;Boot</code> source, you must select Volume. </li> <li>You will need to click the up arrow alongside the volume noted in point 3 to use it as the boot source.</li> <li>Follow all other instance setup instructions as noted in the Quick guide for the network settings, keypairs etc., and launch the instance.</li> <li>Check that the instance has launched and note the new IP address.</li> <li>Access your volume via the terminal (ssh ubuntu@\u2026. ), here you will need to use the new IP address.</li> <li>Your machine should run as before, but with the flavour most recently selected.</li> </ol> <p>NOTE: Windows users may need to update PuTTy settings.</p>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#additional-benefits","title":"Additional Benefits:","text":"<ul> <li>This solves the current inability to resize an instance.</li> <li>Every time you need to make changes to the installation on the volume, you can spin up a machine that is the perfect size for the task.</li> <li>This mitigates the problems encountered when trying to shelve a GPU instance. (Launching a new instance from a volume does not require that the identical physical device is attached to the instance, as is the case when trying to shelve an instance).</li> <li>You will get an idea of how many volumes you have allocated to your user and can clean up your storage.</li> </ul>"},{"location":"guides/best_practice_guides/delete_instance_launch_from_volume/#note-on-volume-sizes","title":"Note on volume sizes","text":"<p>Volumes can always be extended later (but not reduced in size) so any image or snapshot creation intended for sharing or as templates should be set to the minimum viable size.</p>"},{"location":"guides/best_practice_guides/diffrent_volume_size/","title":"Custom volume size","text":"<p>When you create a new instance, it will inherit the volume size from the flavour (1TB). To create a custom volume the user must first create a volume and then launch this volume as an instance.</p> <ol> <li>Navigate to the Volume tab.</li> <li>Click the Create Volume button.</li> <li>Set Volume Name.</li> <li>Set Volume Source from image.</li> <li>Set Set custom size.</li> <li>Click launch instance as volume.</li> <li>Set name for instance</li> <li>Select Boot source Volume.</li> <li>Select flavour and launch instance</li> </ol> <p></p>"},{"location":"guides/faq/","title":"Frequently asked questions and glossary","text":""},{"location":"guides/faq/cloud_glossary/","title":"CLAAUDIA Compute Cloud Strato glossary.","text":""},{"location":"guides/faq/cloud_glossary/#instance","title":"Instance","text":"<p>Instances are virtual machines that run inside the cloud. The instance requires a volume attached.</p>"},{"location":"guides/faq/cloud_glossary/#volume","title":"Volume","text":"<p>A volume is a detachable block storage device, similar to a USB hard drive. You can attach a single volume to only one instance. Volumes can be stored after an instance is deleted, used to spin up new instances, backup and made into a cloud image.</p>"},{"location":"guides/faq/cloud_glossary/#flavour","title":"Flavour","text":"<p>In CLAAUDIA Compute Cloud, flavors define the compute, memory, and storage capacity of your instances. To put it simply, a flavor is an available hardware configuration for a server. It defines the size of a virtual server that can be launched.</p>"},{"location":"guides/faq/cloud_glossary/#key-pair","title":"Key-pair","text":"<p>The best way to provide secure and easy access to your Cloud instances is through the use of key pairs for SSH authentication. Key pairs are made up of a private key that only you know, and a public key that is distributed to people and systems with which you would like to have secure communications. The Compute Cloud allows you to easily generate or upload such key pairs to use with your instances.</p> <p>When you create a new instance, you should specify a key pair to be used for logging in to that instance. You can only add a key pair to an instance at the time of its creation, not afterwards, so it is important not to overlook this step. It is possible to generate a new key pair during the process of creating an instance.</p>"},{"location":"guides/faq/cloud_glossary/#networks","title":"Networks","text":"<p>When starting an instance, you can select between Campus Network 01 and AAU Public. </p> <p>Campus Network 01: If you are in doubt select Campus Network 01. The instance will be associated to an 10.92.. IP that you can access when at campus or using VPN.</p> <p>AAU Public: The instance will be associated to a global accessible IP 130...*. This can be if you are interested in having an instance that is globally accessible for e.g. hosting a webservice, copying data from another university etc. Be aware that this poses a higher security risk.</p>"},{"location":"guides/faq/cloud_glossary/#security-groups","title":"Security Groups","text":"<p>Security Groups allow control over the types of communication that are possible between a Cloud instance and the internet. A security group is a collection of rules, each of which specifies that internet traffic will be allowed to come from (ingress) or go to (egress) a set of Internet Protocol (IP) addresses through a given set of ports. The permissions given by these rules accumulate to form the net effect of the security group. Multiple security groups can be assigned to an instance, and the permissions from multiple groups also accumulate.</p>"},{"location":"guides/getting_started/access_instance/","title":"Access instance","text":"<p>All Strato instances are run on the AAU-network. Before you attempt to access your instance, please make sure that you are connected to the AAU-network - either by being physically on university grounds, being connected to the AAU VPN-service or establishing the connection through the SSH-gateway. </p> <p>Strato requires your key file to be in the OpenSSH-format, and if you have managed to create the key pair according to the previous section, it's safe to assume that you have OpenSSH installed on your machine. </p> <p>The following will work on most modern computers, but for Windows users we specifically recomend using either Powershell (comes preinstalled on all Windows computers), MobaXterm or PuTTY. Do not rely on the console built in the OpenStack dashboard.</p>"},{"location":"guides/getting_started/access_instance/#access-your-instance","title":"Access your instance","text":"<p>Open the appropriate terminal application for your system and enter the SSH command. </p> <p>The command structure is:</p> <pre><code>ssh -i ~/.ssh/&lt;my_private_key&gt; ubuntu@10.92.0.zzz\n</code></pre> <ul> <li><code>ssh</code> is a call for establishing an SSH-connection. </li> <li><code>-i</code> is an additional argument for specifying an identity file (private key).</li> <li><code>~/.ssh/yourPersonalKey</code> is the typical location of your private key (identity file). Don't forget to swap this out for the actual location of your SSH-key.</li> <li><code>ubuntu@10.92.10.zzz</code> specifies which user you want to log in as, and the IP adress of the instance you want to connect to (can be found in the OpenStack dashboard; Compute &gt; Instances )</li> </ul> <p>The command should look something like this:</p> <pre><code>ssh -i ~/.ssh/my_ssh_key ubuntu@10.92.1.99\n</code></pre> <p>You should now have accessed your instance!</p>"},{"location":"guides/getting_started/access_instance/#additional-information","title":"Additional information","text":"<p>Usernames for other distribution images</p> <p>The default user name for Ubuntu-instances is always \"ubuntu\". If you decide to try out a different distribution image, this would change. A list of default usernames for other images can be found here.</p> <p>Connecting via AAU's SSH-gateway</p> <p>If you do not have access to the VPN, it is also possible to connect to your instance by using AAU's SSH gateway as a jump host. This way your connection gets established through the gateway without redirecting the rest of your network traffic. Note that this will ask you for multifactor authentication. </p> <p><pre><code>ssh -J &lt;aau_username&gt;@sshgw.aau.dk -i  ~/.ssh/my_ssh_key ubuntu@10.92.1.99\n</code></pre> Where you switch out  for your actual username, like so: <pre><code>ssh -J kf41yf@dep.aau.dk@sshgw.aau.dk -i  ~/.ssh/my_ssh_key ubuntu@10.92.1.99\n</code></pre> <p>File permissions</p> <p>It is possible, you might be faced with an error message telling you \"Permissions are too open\". In order to solve this you need to modify the file permissions: <pre><code>chmod 600 ~/.ssh/my_ssh_key\n</code></pre> </p>"},{"location":"guides/getting_started/launch_instance/","title":"Launch instance","text":""},{"location":"guides/getting_started/launch_instance/#log-in-to-strato","title":"Log in to Strato","text":"<p>Strato instances are launched in an Openstack dashboard which can be accessed at: strato-new.claaudia.aau.dk.</p> <ul> <li>Ensure the field \"Authenticate using\" is set to \"WAYF\" and click Sign in. </li> <li>You will be redirected to \"signon.aau.dk/\" where you must login with your regular AAU credentials. Enter them and click Sign in.</li> </ul> <p>When you have done this, you should have reached the OpenStack dashboard!</p> <p></p>"},{"location":"guides/getting_started/launch_instance/#initial-openstack-setup","title":"Initial Openstack setup","text":"<p>The default way of accessing Strato instances is done with SSH. This a commonly used protocol in cloud computing. Before launching your first Strato instance, we need to make a couple of configurations in the OpenStack platform. </p>"},{"location":"guides/getting_started/launch_instance/#ssh-rule","title":"SSH rule","text":"<p>Strato configures port access with Security groups. Each group can have multiple rules to permit access. Follow these steps to add port 22 (standard for SSH) to the default security group.</p> <ol> <li>Navigate to Network -&gt; Security Groups</li> <li>Click Manage Rules on the default Security group</li> <li>Click Add Rule</li> <li>Choose SSH from dropdown menu.</li> <li>Click Add</li> </ol> <p></p>"},{"location":"guides/getting_started/launch_instance/#create-ssh-key-pair","title":"Create SSH key pair","text":"<p>Authenticating with SSH requires you to have an SSH key pair. This key pair consists of a public key (stored on the remote device) and a private key (stored only on your local device). </p> <p>For security reasons your SSH-key must be encrypted with a password, and therefore this needs to be done on your local computer. In the following we will create a key pair using the OpenSSH-standard compatible with Strato.</p> <p>The following will work on most modern terminal emulators. For Windows users we recomend using the preinstalled application Powershell.</p> <ul> <li>Open your terminal application.</li> <li>Enter <code>cd ~/.ssh</code> to navigate to the conventional directory for SSH-keys.<ul> <li>If the directory doesn't exist already, you can create it with: <ul> <li><code>mkdir ~/.ssh</code> MacOS/Linux</li> <li><code>md ~/.ssh</code> on Windows</li> </ul> </li> <li>Don't forget to enter the directory afterwards, with <code>cd ~/.ssh</code></li> <li>Type <code>ls</code> to list the files in the current directory. This is just so you can keep track of what changes.</li> </ul> </li> <li>Enter <code>ssh-keygen</code> to initiate the key generation.</li> <li>When faced with the prompt \"Enter file in which to save the key...\" you can set an optional name for your keyfile.</li> <li>Then you will asked to set a password. For security reasons, we strongly recommend setting a password for your keys. See AAU IT Security's recommendations for passwords.</li> <li>You should now have two files that weren't there before. Typing <code>ls</code> will reveal two new files: \"id_rsa\" and \"id_rsa.pub\" (if you chose your own file name this will have replaced the \"id_rsa\" part).</li> </ul>"},{"location":"guides/getting_started/launch_instance/#upload-key-pair-to-openstack","title":"Upload key pair to OpenStack","text":"<p>Now that we have created our key pair, we need to upload the public key to Strato </p> <ul> <li>Navigate to Compute -&gt; Key Pairs</li> <li>Click Import Public Key. This will open a dialog box.</li> <li>Under Key Pair Name type in the name you gave the key, when you created it.</li> <li>Under Key Type select SSH. </li> <li>Under Load Public Key from a file click Browse and navigate to the location of your keyfile.<ul> <li>On Mac OS and Linux the directory <code>~/.ssh</code> is hidden and might not be visible in your file manager.<ul> <li>MacOS Finder press \"cmd + shift + .\" to show hidden files.</li> <li>Ubuntu/Gnome (using Nautilus file manager) press \"ctrl + h\" to show hidden files.</li> </ul> </li> </ul> </li> <li>Select your public key file (ends in .pub) and click Ok.</li> </ul>"},{"location":"guides/getting_started/launch_instance/#launch-ubuntu-instance","title":"Launch Ubuntu instance","text":"<p>To launch the Ubuntu instance navigate to the \"launch instance\" menu using the webinterface.</p> <ol> <li>Navigate to Compute -&gt; Images</li> <li>Press Launch on the right side of the image you wish to Launch.</li> </ol> <p></p> <p>In the \"Launch instance\" menu you can choose the settings for the instance. In this excercise we will apply the following:</p> <ul> <li>Details: Choose a name for your instance.</li> <li>Source: Choose Ubuntu 22.04.</li> <li>Flavour: Choose \"AAU.CPU-1-4\" to create the smallest possible instance. </li> <li>Networks: Select \"Campus Network 01\" or \"Campus Network 02\". If you are interested in having an instance that is globally accessible for e.g. hosting a webservice, copying data from another university etc., then select \"AAU Public\". Make sure you understand the security risks.<ul> <li>Only associate one of the two networks to your instance. If you associate both; it will not work without considerable additional effort not documented here.</li> </ul> </li> <li>Security groups: Ensure that the default security group we edited earlier is applied (should be default). </li> <li>Key-pair: Ensure that the key-pair created earlier is applied (should be default).</li> </ul> <p></p> <p>Congratulations!</p> <p>You have launched your first instance. Now consult the \"Access instance\"-section to learn how to access your instance!</p> <p>Reminder: Strato is a pool of ressources shared between all users. If you do not plan on using the instance, you have just created, please delete it, so other users can make use of the ressources. Consult the page \"Shelve instance\" for instructions on how to do this.</p>"},{"location":"guides/getting_started/shutting_down/","title":"Shutting down","text":"<p>Strato is a service made available to all AAU-users. The platform consists of shared hardware, and this only works if the users use the platform as intended. This is why we ask you to consider whether the ressources you have reserved for your instance, are being put to use at the moment. If not, you might be occupying ressources, that another user could benefit from.</p> <p>We therefore ask you to read through our 'Terms and Conditions' to help make this assessment.</p> <p>There are a number of different ways, but here we will present the two most important. Please consult the page 'OpenStack Guides' for more detailed descriptions of the options.</p>"},{"location":"guides/getting_started/shutting_down/#shelve-instance","title":"Shelve instance","text":"<p>When you shelve your instance, you retain all of the data and software you might have installed on your instance, but you free up ressources for others to use.</p> <ol> <li>Navigate to the project tab</li> <li>Click the Compute sub-tab</li> <li>Click on Instances</li> <li>Find the instance and the Action roll down.</li> <li>Select \"Shelve instance\". After a bit of time, the Status should be \"Shelved Offloaded\"</li> <li>When you need the instance again - select \"Unshelve instance\" under the Actions roll-down.</li> </ol> <p></p>"},{"location":"guides/getting_started/shutting_down/#delete-instance","title":"Delete instance","text":"<p>If you are done using your instance, then you can delete it. </p> <ol> <li>Navigate to the project tab</li> <li>Click the Compute sub-tab</li> <li>Click on Instances</li> <li>Mark the checkbox of the instance you wish to delete.</li> <li>Press Delete Instances on the right side of the webpage.</li> <li>press Delete Instances in the confirmation dialog.</li> </ol> <p></p>"},{"location":"guides/getting_started/transfer_files/","title":"Transferring files","text":"<p>In the following, we will demonstrate three ways of transfering files from your local computer to your Strato instance.</p>"},{"location":"guides/getting_started/transfer_files/#scp","title":"SCP","text":"<p>SCP (Secure file copy) is a method for transfering files via SSH-connections. The command <code>scp</code> is available for all operating systems. </p> <p>The general command structure is as follows:</p> <pre><code>scp -i &lt;my_ssh_key&gt; -r &lt;directory_to_be_sent&gt; &lt;remote_location&gt;\n</code></pre> <p>In order to send a folder called \"my_datafiles\" to the home directory of my instance, you could type:</p> <pre><code>scp -i ~/.ssh/my_ssh_key -r my_datafiles ubuntu@10.92.1.99:~/\n</code></pre> <ul> <li><code>scp</code> specifies we will be using the scp protocol.</li> <li><code>-i</code> is an additional argument for specifying an identity file (private key).</li> <li><code>~/.ssh/my_ssh_key</code> is the conventional location of your private key.</li> <li><code>-r</code> specifies that we want to send recursively (ie. a folder and all it's content). If you are only sending a single file, you can leave this out.</li> <li><code>ubuntu</code> is the default username of our Ubuntu instance.</li> <li><code>10.92.1.99</code> is the IP adress of your instance.</li> <li><code>:~/</code> is where you want your files copied to on the remote location (<code>~/</code> is the home directory).</li> </ul>"},{"location":"guides/getting_started/transfer_files/#rsync","title":"Rsync","text":"<p>For larger file transfers it can be benefitial to use Rsync which has a few extra features. Rsync comes preinstalled on MacOS and Linux, but is unavailable for Windows.</p> <p>The basic command structure for transfering files over SSH is: <pre><code>rsync -e \"ssh -i &lt;my_ssh_key&gt;\" &lt;file_location&gt; &lt;receiver_location&gt;\n</code></pre></p> <p>The command structure is essentially the same as for SCP. To send a folder called \"my_datafiles\", with some additional Rsync features applied, you could type: <pre><code>rsync -e \"ssh -i ~/.ssh/my_ssh_key\" -vazPr my_datafiles ubuntu@10.92.1.99:~/\n</code></pre></p> <p>The <code>-vazPr</code> part specifies a series of options, we can apply to our transfer:</p> <ul> <li><code>-v</code> Tells us about the status of our transfer.</li> <li><code>-a</code> Archives the files during transfer.</li> <li><code>z</code> Compresses the files during transfer. Can make the transfer more efficient</li> <li><code>-P</code> Displays a progress bar of the transfer</li> <li><code>-r</code> specifies the transfer should be recursive (ie. we want the folder and all it's content).</li> </ul>"},{"location":"guides/getting_started/transfer_files/#winscp","title":"WinSCP","text":"<p>If you are a Windows user, we recommend you use WinSCP to transfer the files. WinSCP is available for download in the AAU Software Center.</p> <ul> <li>Opening the application should give you this window: </li> </ul> <p></p> <ul> <li> <p>Choose SCP as the \"File protocol\"</p> </li> <li> <p>In the field \"Host name\" type in the IP-adress of your instance.</p> </li> <li> <p>For the SSH-protocol the standard \"Port number\" is 22.</p> </li> <li> <p>The field \"User name\" is a standard username that gets assigned to your instance. A list of standard usernames can be found here.   </p> </li> <li> <p>By standard the field \"Password\" can be left empty.</p> </li> <li> <p>Then click the \"Advanced Button\", and you will be faced with this window:</p> </li> </ul> <p></p> <ul> <li>Navigate to SSH -&gt; Authentication and browse to the location of your SSH-key. Select the key and press \"Open\". </li> </ul> <p></p> <ul> <li> <p>If you have navigated to the correct location and still can not see your SSH-key, please select \"Show all files\" as shown in the image above. Note that WinSCP only supports SSH-keys in the PuTTY-format (.pkk). If you have not already converted your key to this format, WinSCP will offer to do this for you, when you select the key in .pem-format.</p> </li> <li> <p>Press \"Ok\" in the \"Advanced\" window to apply these settings.</p> </li> <li> <p>You should now be back at this window. Press login.</p> </li> </ul> <p></p> <ul> <li>The first time you login you will be welcomed by a warning message, asking wether you do in fact want to connect to this adress. If you can confirm this is what you are trying to do, you can press \"Yes\".</li> </ul> <p></p> <ul> <li>You should now have a two-pane window, split vertically. On the left side you will have your local computer, and on the right side you will have the remote computer. To transfer files between them you can simply drag and drop. </li> </ul> <p></p>"},{"location":"guides/getting_started/welcome/","title":"Getting started with Strato","text":"<p>This section will guide you through the process of creating you first cloud instance in Strato. </p> <p>We will cover: </p> <ol> <li>Setting up Strato and launching your first instance. </li> <li>Accessing your instance.</li> <li>Transfering files from your local computer to your instance.</li> <li>Shutting down your instance when you are done.</li> </ol>"},{"location":"guides/home_page/before_you_start/","title":"Before you start","text":""},{"location":"guides/home_page/before_you_start/#before-you-get-started-on-strato","title":"Before you get started on Strato","text":"<p>There are a multitude of ways to work with virtual machines on Strato, but there is one general process that we require users to follow.</p> <ol> <li>All setup should take place on a small flavor.</li> <li>Delete the small instance, rename and and retain the volume.<ul> <li>All images create initial volume sizes of 50Gb. </li> <li>If you need more than 50 Gb of storage for your instance, navigate to the <code>volumes</code> pane and extend the volume used in step 1.</li> </ul> </li> <li>Launch a new instance from the volume, choosing the flavour of machine necessary for the work you are doing on the instance.</li> <li>When you are finished working on the instance, delete it.</li> <li>When returning to Strato, repeat steps 3 and 4.</li> </ol>"},{"location":"guides/home_page/introduction/","title":"Introduction","text":"<p>Strato is an on-premise cloud platform based on servers with CPU and GPU components that enable you to solve both generic and specific computational problems using virtual machines that you can configure yourself. This can be for both short-term problem solving, as well as work that takes a long time.</p> <p>Strato is a Linux-based virtual computer platform to support data driven research that needs additional processing capacity. Network storage allows users to store and process large datasets, and the OpenStack platform allows the user to change the size of the computer (processing capacity) that is connected to their boot disk.</p> <p>The Strato platform is a cluster of hardware that is virtualised to create instances that essentially function as a regular computer environment. Strato Instances are virtual machines, that can be launched by the user when they need it. When the instance has been created, it can be accessed from a terminal application on the user's local computer. The required software can then be installed and configured to the user's needs. By using Strato your research can benefit from additional RAM, CPU and GPU hardware. Strato can thus provide you with flexibility and additional computational power, when your research needs it.</p>"},{"location":"guides/home_page/introduction/#required-skills-and-knowledge","title":"Required skills and knowledge","text":"<p>Operating Strato involves running your own Linux virtual machine and learning how to use the Linux terminal environment. It can also be useful to understand secure connections through SSH and secure file transfer protocols.</p>"},{"location":"guides/home_page/skills_needed/","title":"Skills needed","text":""},{"location":"guides/home_page/skills_needed/#skills-needed-to-get-started-on-strato","title":"Skills needed to get started on Strato","text":""},{"location":"guides/home_page/technical_details/","title":"Technical details","text":""},{"location":"guides/home_page/technical_details/#strato-technical-details","title":"STRATO - Technical details","text":""},{"location":"guides/home_page/technical_details/#openstack","title":"OpenStack","text":""},{"location":"guides/home_page/technical_details/#cpu-processors","title":"CPU processors","text":""},{"location":"guides/home_page/technical_details/#gpu-processors","title":"GPU processors","text":""},{"location":"guides/home_page/technical_details/#storage","title":"Storage","text":"<p>There is no backup of Ceph data</p>"},{"location":"guides/home_page/technical_details/#networks","title":"Networks","text":""},{"location":"guides/performance/performance/","title":"Computational Performance in Strato","text":"<p>Instances in Strato are virtual machines in an OpenStack environment which runs on a cluster of various different servers. The computational performance you experience from an instance in Strato, e.g. how long it takes to run a given computation, is influenced by several different factors.</p> <p>First and foremost, it is important whether the software you run in your instance can utilise as many CPU cores as the instance provides. If for example your software can only utilise 4 CPU cores in total, it will not improve performance to use a flavor with more than 4 VCPUs.</p> <p>Additional factors that influence computational performance:</p> <ul> <li>CPU architecture   Your software may be optimised to run faster on an Intel CPU than an   AMD CPU, or vice versa.</li> </ul> <p>The Strato platform consists of servers with Intel CPUs as well as   with AMD CPUs. Users cannot configure which CPU architecture to use   and your instance will end up on an arbitrary server depending on   what is available at the moment when you start your instance.</p> <p>You can run the command <code>lscpu</code> in your instance to determine   which type of CPU(s) your instance is running on.</p> <ul> <li>VCPUs are virtual CPUs   One VCPU in Strato does not necessarily correspond to one physical   CPU core in a server.</li> </ul> <p>One VCPU may correspond to one \"hardware thread\" in the CPU and not   one physical CPU core. Hardware threads are for example the parallel   instruction pipelines in Intel's HyperThreading technology.</p> <ul> <li>VCPUs are over-provisioned   In addition to the above, VCPUs in Strato may be over-provisioned to   some degree. This means that the computation time of a VCPU may be   \"time-shared\" with other virtual machines in the same server. You   may thus experience that a VCPU in your Strato instance is   effectively only doing work for you down to 50% of the time.</li> </ul> <p>This time-sharing is not directly visible to you as a user of an   instance, but you may be able to measure it by computations being up   to twice as slow as you would normally expect from the underlying   physical CPU.</p> <ul> <li>Storage in Strato is network storage on rotating hard drives   The file storage available to Strato instances is provided through a   network file system (Ceph) using rotating hard drives. Both the   network and the hard drive technology impacts the file I/O   performance you experience in Strato.</li> </ul> <p>In practice this means that file I/O in Strato may be several times   slower than your own laptop computer with fast NVMe solid state   storage. If your computational work depends highly on file I/O, you   are likely to experience lower performance in Strato than you would   on your own laptop, even if the Strato instance has more VCPUs and   more RAM available.</p>"}]}